programs:
  # Simple program with mutiple instances
  # instance_numproc:
  #   cmd: "sh"
  #   args:
  #     - "-c"
  #     - |
  #       echo "Hello world"; \
  #       sleep 30
  #   numprocs: 2
  
  # The instance is not starting when false until start it in the program.
  # instance_autostart:
  #   cmd: "sh"
  #   args:
  #     - "-c"
  #     - |
  #       echo "Hello world"; \
  #       sleep 30
  #   numprocs: 1
  #   autostart: false

  # After exit, the instance is not re-starting when never, re-starting when always or if exits a code not listed in exitcodes.
  # instance_autorestart_always:
  #   cmd: "sh"
  #   args: ["-c", "exit 1"]
  #   numprocs: 1
  #   startretries: 3
  #   autorestart: "always"
  # instance_autorestart_never:
  #   cmd: "sh"
  #   args: ["-c", "exit 1"]
  #   numprocs: 1
  #   autorestart: "never"
  #   startretries: 3
  # instance_autorestart_unexpected_true:
  #   cmd: "sh"
  #   args: ["-c", "exit 1"]
  #   numprocs: 1
  #   startretries: 3
  #   autorestart: "unexpected"
  # instance_autorestart_unexpected_false:
  #   cmd: "sh"
  #   args: ["-c", "exit 1"]
  #   numprocs: 1
  #   autorestart: "unexpected"
  #   startretries: 3
  #   exitcodes: [1]

  # After exit, the instance re-starts only if exits a code not listed in exitcodes and autorestart is 'unexpected'.
  # instance_exit_code_false:
  #   cmd: "sh"
  #   args: ["-c", "exit 1"]
  #   numprocs: 1
  #   autorestart: "unexpected"
  #   startretries: 3
  #   exitcodes: [1,2]
  # instance_exit_code_true:
  #   cmd: "sh"
  #   args: ["-c", "exit 1"]
  #   numprocs: 1
  #   autorestart: "unexpected"
  #   startretries: 3
  #   exitcodes: [0,2]
  
  # The instance promoted to healthy rather than being treated as a startup failure if the starttime value is less than it's starting time.
  # instance_starttime_healthy:
  #   cmd: "sleep"
  #   args: ["10"]
  #   numprocs: 1
  #   starttime: 3
  # instance_starttime_failure:
  #   cmd: "sleep"
  #   args: ["2"]
  #   numprocs: 1
  #   starttime: 5

  # The instance restarts after failing n times (startretries times)
  # instance_startretries:
  #   cmd: "sh"
  #   args:
  #     - "-c"
  #     - |
  #       echo "I always fail"; \
  #       exit 1
  #   numprocs: 1
  #   autorestart: always
  #   exitcodes: [0]
  #   startretries: 3

  # The instance listens for SIGINT signal, which receives when stopping it, resulting a clean exit immediately.
  # The instance listens for SIGTERM signal, which doesn't receive when stopping it, resulting a forc-kill after 5s.
  # instance_graceful_shutdown:
  #   cmd: "sh"
  #   args:
  #     - "-c"
  #     - |
  #       echo "PID $$ starting"; \
  #       trap 'exit 0' INT; \
  #       while true; do sleep 1; done
  #   numprocs: 1
  #   stopsignal: INT
  #   stoptime: 5
  # instance_force_kill:
  #   cmd: "sh"
  #   args:
  #     - "-c"
  #     - |
  #       echo "Ignoring TERM, PID $$"
  #       trap '' TERM
  #       while true; do sleep 1; done
  #   numprocs: 1
  #   stopsignal: TERM
  #   stoptime: 5

  # The instance redirects both stdout and stderr logs to the path specified if so.
  # instance_stdeout_stderr:
  #   cmd: "sh"
  #   args:
  #     - "-c"
  #     - |
  #       echo 'This stdout is logged from instance_stdout_stderr'
  #       echo 'This stderr is logged from instance_stdout_stderr' 1>&2
  #   numprocs: 1
  #   stdout: "logs/instance.out"
  #   stderr: "logs/instance.err"
  # instance_stdeout_stderr_null:
  #   cmd: "sh"
  #   args:
  #     - "-c"
  #     - |
  #       echo 'Useless logs'
  #       echo 'Useless logs' 1>&2
  #   numprocs: 1
  #   stdout: null
  #   stderr: null

  # The instance expands the value of env variables.
  # instance_env_var:
  #   cmd: "sh"
  #   args: ["-c", "echo It is $HRS:$MIN o clock"]
  #   numprocs: 1
  #   env:
  #     HRS: "13"
  #     MIN: "37"
  #   stdout: "logs/instance.out"

  # The instance overrides the current working to the value of 'workingdir' attr.
  # instance_local_dir:
  #   cmd: "sh"
  #   args: ["-c", "echo 'created from instance_local_dir' > output.txt"]
  #   numprocs: 1
  #   workingdir: "scripts/a_dir"

  # The instance creates a file applying the file mode creation mask specifications.
  # isntance_umask:
  #   cmd: "sh"
  #   args: ["-c", "touch afile; echo 'created from isntance_umask' > afile"]
  #   numprocs: 1
  #   workingdir: "scripts/a_dir"
  #   umask: "007"
